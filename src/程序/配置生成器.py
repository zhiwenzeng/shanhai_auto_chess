#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
山海经异兽自走棋 - 配置生成器
用于生成完整的游戏配置文件
"""

import json
import random

def 生成异兽配置():
    """生成88种异兽的完整配置"""
    异兽列表 = []
    
    # 山海经异兽数据
    异兽数据 = [
        {"名称": "九尾狐", "稀有度": "传说", "生命值": 8, "护盾值": 2, "攻击力": 6, "背景": "青丘之山，有兽焉，其状如狐而九尾，其音如婴儿，能食人，见则其国有大旱。"},
        {"名称": "穷奇", "稀有度": "史诗", "生命值": 10, "护盾值": 1, "攻击力": 8, "背景": "邽山，其上有兽焉，其状如牛，蝟毛，名曰穷奇，音如獆狗，是食人。"},
        {"名称": "饕餮", "稀有度": "史诗", "生命值": 12, "护盾值": 0, "攻击力": 7, "背景": "钩吾之山，其上多玉，其下多铜。有兽焉，其状如羊身人面，其目在腋下，虎齿人爪，其音如婴儿，名曰饕餮，是食人。"},
        {"名称": "混沌", "稀有度": "传说", "生命值": 15, "护盾值": 3, "攻击力": 5, "背景": "天山，有神焉，其状如黄囊，赤如丹火，六足四翼，浑敦无面目，是识歌舞，实惟帝江也。"},
        {"名称": "梼杌", "稀有度": "史诗", "生命值": 9, "护盾值": 0, "攻击力": 9, "背景": "西方荒中有兽焉，其状如虎，有翼能飞，便剿食人，知人言语，闻人斗辄食直者，闻人忠信辄食其鼻，闻人恶逆不善辄杀兽往馈之，名曰梼杌。"},
        {"名称": "夔牛", "稀有度": "稀有", "生命值": 7, "护盾值": 2, "攻击力": 4, "背景": "东海中有流波山，入海七千里。其上有兽，状如牛，苍身而无角，一足，出入水则必有风雨，其光如日月，其声如雷，其名曰夔。"},
        {"名称": "应龙", "稀有度": "传说", "生命值": 14, "护盾值": 4, "攻击力": 10, "背景": "应龙处南极，杀蚩尤与夸父，不得复上，故下数旱，旱而为应龙之状，乃得大雨。"},
        {"名称": "白泽", "稀有度": "史诗", "生命值": 6, "护盾值": 3, "攻击力": 5, "背景": "东望山有兽，名曰白泽，能言语，达于万物之情，知天下之事。"},
        {"名称": "麒麟", "稀有度": "传说", "生命值": 13, "护盾值": 5, "攻击力": 7, "背景": "麒麟，仁兽也，麋身牛尾，一角，角端有肉，设武备而不为害，所以为仁也。"},
        {"名称": "凤凰", "稀有度": "传说", "生命值": 11, "护盾值": 2, "攻击力": 8, "背景": "丹穴之山，有鸟焉，其状如鸡，五采而文，名曰凤皇，首文曰德，翼文曰义，背文曰礼，膺文曰仁，腹文曰信。"}
    ]
    
    # 生成更多异兽（这里只展示前10个，完整版需要88个）
    for i, 数据 in enumerate(异兽数据):
        异兽 = {
            "id": f"{i+1:03d}",
            "名称": 数据["名称"],
            "稀有度": 数据["稀有度"],
            "生命值": 数据["生命值"],
            "护盾值": 数据["护盾值"],
            "攻击力": 数据["攻击力"],
            "背景故事": 数据["背景"],
            "特殊能力": {
                "名称": f"{数据['名称']}之力",
                "描述": f"{数据['名称']}的特殊能力，根据稀有度提供不同效果",
                "触发阶段": random.choice(["战斗开始", "攻击时", "受到伤害时", "击败敌人后"])
            }
        }
        异兽列表.append(异兽)
    
    # 生成剩余异兽（简化版）
    for i in range(10, 88):
        稀有度 = random.choice(["普通", "稀有", "史诗", "传说"])
        生命值 = random.randint(3, 15) if 稀有度 == "普通" else random.randint(5, 20)
        护盾值 = random.randint(0, 3) if 稀有度 in ["普通", "稀有"] else random.randint(1, 5)
        攻击力 = random.randint(2, 6) if 稀有度 == "普通" else random.randint(4, 12)
        
        异兽 = {
            "id": f"{i+1:03d}",
            "名称": f"异兽{i+1}",
            "稀有度": 稀有度,
            "生命值": 生命值,
            "护盾值": 护盾值,
            "攻击力": 攻击力,
            "背景故事": f"这是第{i+1}号异兽的背景故事",
            "特殊能力": {
                "名称": f"异兽{i+1}之力",
                "描述": f"异兽{i+1}的特殊能力",
                "触发阶段": random.choice(["战斗开始", "攻击时", "受到伤害时", "击败敌人后"])
            }
        }
        异兽列表.append(异兽)
    
    return {"异兽列表": 异兽列表}

def 生成奇珍异宝配置():
    """生成30种食物和12种道具的配置"""
    食物列表 = []
    道具列表 = []
    
    # 食物数据
    食物名称 = ["灵芝仙草", "龙血果", "凤凰羽毛", "九转金丹", "蟠桃", "人参果", "龙肝凤髓", "仙露", "玉液", "琼浆"]
    
    for i in range(30):
        if i < len(食物名称):
            名称 = 食物名称[i]
        else:
            名称 = f"仙草{i+1}"
        
        稀有度 = random.choice(["普通", "稀有", "史诗", "传说"])
        生命值 = random.randint(1, 8) if 稀有度 == "普通" else random.randint(2, 12)
        护盾值 = random.randint(0, 3) if 稀有度 in ["普通", "稀有"] else random.randint(1, 5)
        攻击力 = random.randint(0, 4) if 稀有度 in ["普通", "稀有"] else random.randint(1, 6)
        
        食物 = {
            "id": f"food_{i+1:03d}",
            "名称": 名称,
            "类型": "食物",
            "稀有度": 稀有度,
            "效果": {
                "生命值": 生命值,
                "护盾值": 护盾值,
                "攻击力": 攻击力
            },
            "描述": f"{名称}，具有神奇的功效"
        }
        食物列表.append(食物)
    
    # 道具数据
    道具名称 = ["避水珠", "雷神锤", "不死符", "隐身衣", "如意金箍棒", "乾坤袋", "照妖镜", "捆仙绳", "定海神针", "混元珠", "太极图", "诛仙剑"]
    
    for i in range(12):
        名称 = 道具名称[i]
        稀有度 = random.choice(["普通", "稀有", "史诗", "传说"])
        生命值 = random.randint(0, 10) if 稀有度 in ["史诗", "传说"] else random.randint(0, 5)
        护盾值 = random.randint(0, 5) if 稀有度 in ["史诗", "传说"] else random.randint(0, 3)
        攻击力 = random.randint(0, 8) if 稀有度 in ["史诗", "传说"] else random.randint(0, 4)
        
        道具 = {
            "id": f"item_{i+1:03d}",
            "名称": 名称,
            "类型": "道具",
            "稀有度": 稀有度,
            "效果": {
                "生命值": 生命值,
                "护盾值": 护盾值,
                "攻击力": 攻击力
            },
            "描述": f"{名称}，具有强大的力量"
        }
        道具列表.append(道具)
    
    return {"食物列表": 食物列表, "道具列表": 道具列表}

def 生成随机事件配置():
    """生成66种随机事件的配置"""
    事件列表 = []
    
    # 正面事件
    正面事件 = [
        {"名称": "天降祥瑞", "描述": "天空中降下祥瑞之光，所有异兽获得增益"},
        {"名称": "奇遇机缘", "描述": "遇到神秘仙人，获得珍贵的奇珍异宝"},
        {"名称": "神兽祝福", "描述": "神兽降临，为玩家提供强大的祝福"},
        {"名称": "仙气缭绕", "描述": "仙气环绕，异兽们感到力量充盈"},
        {"名称": "福星高照", "描述": "福星高照，所有异兽获得幸运加成"}
    ]
    
    # 负面事件
    负面事件 = [
        {"名称": "凶兽来袭", "描述": "凶猛的野兽突然出现，对玩家造成伤害"},
        {"名称": "天灾降临", "描述": "天灾降临，所有异兽受到重创"},
        {"名称": "诅咒缠身", "描述": "受到诅咒，异兽们感到虚弱"},
        {"名称": "魔气侵蚀", "描述": "魔气侵蚀，异兽们受到污染"},
        {"名称": "厄运降临", "描述": "厄运降临，所有异兽受到惩罚"}
    ]
    
    # 生成正面事件
    for i, 事件 in enumerate(正面事件):
        随机事件 = {
            "id": f"event_{i+1:03d}",
            "名称": 事件["名称"],
            "类型": "正面",
            "触发概率": random.uniform(0.05, 0.20),
            "描述": 事件["描述"],
            "效果": {
                "类型": "全体增益",
                "生命值": random.randint(1, 5),
                "护盾值": random.randint(0, 3),
                "攻击力": random.randint(0, 3)
            }
        }
        事件列表.append(随机事件)
    
    # 生成负面事件
    for i, 事件 in enumerate(负面事件):
        随机事件 = {
            "id": f"event_{i+6:03d}",
            "名称": 事件["名称"],
            "类型": "负面",
            "触发概率": random.uniform(0.08, 0.18),
            "描述": 事件["描述"],
            "效果": {
                "类型": "全体减益",
                "生命值": -random.randint(1, 4),
                "护盾值": -random.randint(0, 2),
                "攻击力": -random.randint(0, 2)
            }
        }
        事件列表.append(随机事件)
    
    # 生成剩余事件（简化版）
    for i in range(11, 66):
        事件类型 = random.choice(["正面", "负面"])
        if 事件类型 == "正面":
            随机事件 = {
                "id": f"event_{i+1:03d}",
                "名称": f"事件{i+1}",
                "类型": "正面",
                "触发概率": random.uniform(0.05, 0.20),
                "描述": f"这是第{i+1}个正面事件",
                "效果": {
                    "类型": "全体增益",
                    "生命值": random.randint(1, 5),
                    "护盾值": random.randint(0, 3),
                    "攻击力": random.randint(0, 3)
                }
            }
        else:
            随机事件 = {
                "id": f"event_{i+1:03d}",
                "名称": f"事件{i+1}",
                "类型": "负面",
                "触发概率": random.uniform(0.08, 0.18),
                "描述": f"这是第{i+1}个负面事件",
                "效果": {
                    "类型": "全体减益",
                    "生命值": -random.randint(1, 4),
                    "护盾值": -random.randint(0, 2),
                    "攻击力": -random.randint(0, 2)
                }
            }
        事件列表.append(随机事件)
    
    # 确保总共有66个事件
    while len(事件列表) < 66:
        i = len(事件列表)
        事件类型 = random.choice(["正面", "负面"])
        if 事件类型 == "正面":
            随机事件 = {
                "id": f"event_{i+1:03d}",
                "名称": f"事件{i+1}",
                "类型": "正面",
                "触发概率": random.uniform(0.05, 0.20),
                "描述": f"这是第{i+1}个正面事件",
                "效果": {
                    "类型": "全体增益",
                    "生命值": random.randint(1, 5),
                    "护盾值": random.randint(0, 3),
                    "攻击力": random.randint(0, 3)
                }
            }
        else:
            随机事件 = {
                "id": f"event_{i+1:03d}",
                "名称": f"事件{i+1}",
                "类型": "负面",
                "触发概率": random.uniform(0.08, 0.18),
                "描述": f"这是第{i+1}个负面事件",
                "效果": {
                    "类型": "全体减益",
                    "生命值": -random.randint(1, 4),
                    "护盾值": -random.randint(0, 2),
                    "攻击力": -random.randint(0, 2)
                }
            }
        事件列表.append(随机事件)
    
    return {"随机事件列表": 事件列表}

def 保存配置():
    """保存所有配置文件"""
    # 保存异兽配置
    with open("../../docs/数值配置/异兽配置.json", "w", encoding="utf-8") as f:
        json.dump(生成异兽配置(), f, ensure_ascii=False, indent=2)
    
    # 保存奇珍异宝配置
    with open("../../docs/数值配置/奇珍异宝配置.json", "w", encoding="utf-8") as f:
        json.dump(生成奇珍异宝配置(), f, ensure_ascii=False, indent=2)
    
    # 保存随机事件配置
    with open("../../docs/数值配置/随机事件配置.json", "w", encoding="utf-8") as f:
        json.dump(生成随机事件配置(), f, ensure_ascii=False, indent=2)
    
    print("配置文件生成完成！")
    print("- 异兽配置：88种")
    print("- 食物配置：30种")
    print("- 道具配置：12种")
    print("- 随机事件：66种")

if __name__ == "__main__":
    print("山海经异兽自走棋 - 配置生成器")
    print("正在生成完整的游戏配置文件...")
    保存配置()
