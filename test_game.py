#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
山海经异兽自走棋 - 游戏功能测试脚本
"""

import sys
import os
sys.path.append('src/程序')

from main import 游戏管理器, 异兽, 奇珍异宝, 随机事件

def 测试异兽类():
    """测试异兽类功能"""
    print("=== 测试异兽类 ===")
    
    # 创建测试异兽
    测试数据 = {
        "id": "test_001",
        "名称": "测试异兽",
        "稀有度": "普通",
        "生命值": 10,
        "护盾值": 2,
        "攻击力": 5,
        "背景故事": "测试用异兽",
        "特殊能力": {
            "名称": "测试能力",
            "描述": "测试特殊能力",
            "触发阶段": "测试阶段"
        }
    }
    
    测试异兽 = 异兽(测试数据)
    print(f"异兽创建成功：{测试异兽.显示状态()}")
    
    # 测试受到伤害
    死亡 = 测试异兽.受到伤害(3)
    print(f"受到3点伤害后：{测试异兽.显示状态()}, 死亡：{死亡}")
    
    # 测试治疗
    测试异兽.治疗(2)
    print(f"治疗2点后：{测试异兽.显示状态()}")
    
    # 测试添加护盾
    测试异兽.添加护盾(1)
    print(f"添加护盾后：{测试异兽.显示状态()}")
    
    # 测试提升攻击力
    测试异兽.提升攻击力(2)
    print(f"提升攻击力后：{测试异兽.显示状态()}")
    
    print("异兽类测试完成！\n")

def 测试奇珍异宝类():
    """测试奇珍异宝类功能"""
    print("=== 测试奇珍异宝类 ===")
    
    # 创建测试食物
    食物数据 = {
        "id": "food_test",
        "名称": "测试食物",
        "类型": "食物",
        "稀有度": "稀有",
        "效果": {
            "生命值": 3,
            "护盾值": 1,
            "攻击力": 2
        },
        "描述": "测试用食物"
    }
    
    测试食物 = 奇珍异宝(食物数据)
    print(f"食物创建成功：{测试食物.名称}")
    
    # 创建测试异兽来使用食物
    异兽数据 = {
        "id": "test_002",
        "名称": "测试异兽2",
        "稀有度": "普通",
        "生命值": 5,
        "护盾值": 0,
        "攻击力": 3,
        "背景故事": "测试用异兽2",
        "特殊能力": {
            "名称": "无",
            "描述": "无特殊能力",
            "触发阶段": "无"
        }
    }
    
    测试异兽 = 异兽(异兽数据)
    print(f"使用食物前：{测试异兽.显示状态()}")
    
    # 使用食物
    测试食物.使用(测试异兽)
    print(f"使用食物后：{测试异兽.显示状态()}")
    
    print("奇珍异宝类测试完成！\n")

def 测试随机事件类():
    """测试随机事件类功能"""
    print("=== 测试随机事件类 ===")
    
    # 创建测试事件
    事件数据 = {
        "id": "event_test",
        "名称": "测试事件",
        "类型": "正面",
        "触发概率": 0.5,
        "描述": "这是一个测试事件",
        "效果": {
            "类型": "全体增益",
            "生命值": 2,
            "护盾值": 1,
            "攻击力": 1
        }
    }
    
    测试事件 = 随机事件(事件数据)
    print(f"事件创建成功：{测试事件.名称}")
    
    # 创建测试异兽列表
    异兽列表 = []
    for i in range(3):
        异兽数据 = {
            "id": f"test_{i+3}",
            "名称": f"测试异兽{i+3}",
            "稀有度": "普通",
            "生命值": 5,
            "护盾值": 0,
            "攻击力": 3,
            "背景故事": f"测试用异兽{i+3}",
            "特殊能力": {
                "名称": "无",
                "描述": "无特殊能力",
                "触发阶段": "无"
            }
        }
        异兽列表.append(异兽(异兽数据))
    
    print("触发事件前异兽状态：")
    for 测试异兽 in 异兽列表:
        print(f"  {测试异兽.显示状态()}")
    
    # 触发事件
    结果 = 测试事件.触发(异兽列表)
    print(f"\n事件触发结果：\n{结果}")
    
    print("\n触发事件后异兽状态：")
    for 测试异兽 in 异兽列表:
        print(f"  {测试异兽.显示状态()}")
    
    print("随机事件类测试完成！\n")

def 测试游戏管理器():
    """测试游戏管理器功能"""
    print("=== 测试游戏管理器 ===")
    
    try:
        游戏 = 游戏管理器()
        print("游戏管理器创建成功！")
        print(f"初始金币：{游戏.金币}")
        print(f"初始回合：{游戏.回合数}")
        print(f"异兽数量：{len(游戏.异兽列表)}")
        print(f"奇珍异宝数量：{len(游戏.奇珍异宝列表)}")
        print(f"随机事件数量：{len(游戏.随机事件列表)}")
        
        # 测试商店显示
        print("\n商店内容：")
        print(游戏.商店.显示商店())
        
        # 测试购买商品
        if len(游戏.商店.当前商品) > 0:
            结果 = 游戏.购买商品(0)
            print(f"\n购买第一个商品结果：{结果}")
            print(f"购买后金币：{游戏.金币}")
            print(f"购买后玩家异兽数量：{len(游戏.玩家异兽列表)}")
        
        # 测试随机事件
        事件结果 = 游戏.随机事件触发()
        print(f"\n随机事件结果：{事件结果}")
        
        print("游戏管理器测试完成！\n")
        
    except Exception as e:
        print(f"游戏管理器测试失败：{e}")
        import traceback
        traceback.print_exc()

def 主测试():
    """主测试函数"""
    print("山海经异兽自走棋 - 功能测试")
    print("=" * 50)
    
    测试异兽类()
    测试奇珍异宝类()
    测试随机事件类()
    测试游戏管理器()
    
    print("所有测试完成！")
    print("游戏功能正常，可以开始游玩。")

if __name__ == "__main__":
    主测试()
